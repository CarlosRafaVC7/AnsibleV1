#!/bin/bash
# {{ ansible_managed }}
# MALWARE PROTECTION SCRIPT
# Configuracion de proteccion contra malware para {{ ansible_hostname }}
# Generado: {{ ansible_date_time.iso8601 }}

# Configuracion de logging
LOG_FILE="/var/log/malware_protection.log"
THREAT_LOG="/var/log/threats_detected.log" 
EMAIL_ALERTS="{{ security_email_alerts | default('false') }}"
ADMIN_EMAIL="{{ security_admin_email | default('admin@localhost') }}"

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Funcion de logging
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Lista de extensiones peligrosas
DANGEROUS_EXTENSIONS=(
    "exe" "scr" "pif" "bat" "cmd" "com" "lnk"
    "vbs" "vbe" "js" "jar" "app" "deb" "rpm"
    "msi" "ps1" "psm1" "hta" "cpl" "msc"
    "reg" "dll" "ocx" "sys" "drv" "tmp"
)

# Directorios a monitorear
MONITOR_DIRS=(
    "/tmp"
    "/var/tmp"
    "/home"
    "/opt"
    "/srv"
    "/var/www"
)

check_dangerous_files() {
    log_message "Iniciando escaneo de archivos peligrosos..."
    
    for dir in "${MONITOR_DIRS[@]}"; do
        if [[ -d "$dir" ]]; then
            log_message "Escaneando directorio: $dir"
            
            for ext in "${DANGEROUS_EXTENSIONS[@]}"; do
                find "$dir" -name "*.$ext" -type f 2>/dev/null | while read -r file; do
                    if [[ -f "$file" ]]; then
                        echo -e "${RED}ARCHIVO SOSPECHOSO: $file${NC}"
                        echo "[$(date '+%Y-%m-%d %H:%M:%S')] THREAT DETECTED: $file" >> "$THREAT_LOG"
                        
                        if [[ "$EMAIL_ALERTS" == "true" ]]; then
                            send_threat_alert "$file"
                        fi
                    fi
                done
            done
        fi
    done
}

send_threat_alert() {
    local threat_file="$1"
    local subject="THREAT DETECTED on {{ ansible_hostname }}"
    local body="THREAT ALERT: Suspicious file detected at $threat_file on $(date)"
    
    if command -v mail >/dev/null 2>&1; then
        echo "$body" | mail -s "$subject" "$ADMIN_EMAIL" 2>/dev/null || true
    fi
    
    log_message "Alerta enviada por archivo: $threat_file"
}

create_file_monitor() {
    log_message "Configurando monitor de archivos..."
    
    if command -v inotifywait >/dev/null 2>&1; then
        cat > /usr/local/bin/malware_monitor.sh << 'MONITOR_EOF'
#!/bin/bash
inotifywait -m -r /tmp /home --format '%w%f %e' -e create,moved_to | while read file event; do
    if [[ "$file" =~ \.(exe|scr|bat|cmd|vbs)$ ]]; then
        echo "[$(date)] SUSPICIOUS FILE CREATED: $file" >> /var/log/threats_detected.log
    fi
done
MONITOR_EOF
        chmod +x /usr/local/bin/malware_monitor.sh
        log_message "Monitor de archivos creado"
    fi
}

quarantine_threats() {
    log_message "Iniciando cuarentena de amenazas..."
    
    QUARANTINE_DIR="/var/quarantine"
    mkdir -p "$QUARANTINE_DIR"
    chmod 700 "$QUARANTINE_DIR"
    
    if [[ -f "$THREAT_LOG" ]]; then
        grep "THREAT DETECTED:" "$THREAT_LOG" | while read -r line; do
            threat_file=$(echo "$line" | cut -d':' -f3- | tr -d ' ')
            if [[ -f "$threat_file" ]]; then
                mv "$threat_file" "$QUARANTINE_DIR/" 2>/dev/null || true
                log_message "Archivo en cuarentena: $(basename "$threat_file")"
            fi
        done
    fi
}

generate_report() {
    log_message "Generando reporte de proteccion..."
    
    local report_file="/var/log/malware_protection_report.txt"
    
    cat > "$report_file" << 'REPORT_EOF'
==================================================
REPORTE DE PROTECCION CONTRA MALWARE
==================================================
REPORT_EOF
    
    cat >> "$report_file" << EOF
Host: {{ ansible_hostname }}
Fecha: $(date)
Sistema: {{ ansible_distribution }} {{ ansible_distribution_version }}
==================================================

ESTADISTICAS:
- Directorios monitoreados: ${#MONITOR_DIRS[@]}
- Extensiones vigiladas: ${#DANGEROUS_EXTENSIONS[@]}
- Amenazas detectadas: $(grep -c "THREAT DETECTED" "$THREAT_LOG" 2>/dev/null || echo "0")
- Ultima actualizacion: $(date)

DIRECTORIOS MONITOREADOS:
$(printf '%s\n' "${MONITOR_DIRS[@]}")

EXTENSIONES PELIGROSAS:
$(printf '%s ' "${DANGEROUS_EXTENSIONS[@]}")

ESTADO DE SERVICIOS:
- ClamAV: $(systemctl is-active clamav-daemon 2>/dev/null || echo "no disponible")
- Monitor: $(pgrep -f malware_monitor >/dev/null && echo "activo" || echo "inactivo")
- Logging: $(test -w "$LOG_FILE" && echo "activo" || echo "inactivo")

==================================================
Sistema de proteccion: OPERATIVO
==================================================
EOF
    
    echo -e "${GREEN}Reporte generado en: $report_file${NC}"
}

main() {
    echo -e "${GREEN}INICIANDO PROTECCION CONTRA MALWARE${NC}"
    echo "===================================================="
    
    mkdir -p "$(dirname "$LOG_FILE")"
    mkdir -p "$(dirname "$THREAT_LOG")"
    
    log_message "Iniciando sistema de proteccion en {{ ansible_hostname }}"
    
    check_dangerous_files
    create_file_monitor
    quarantine_threats
    generate_report
    
    echo -e "${GREEN}Proteccion contra malware completada${NC}"
    log_message "Sistema de proteccion configurado correctamente"
}

# Verificar si se ejecuta como root
if [[ $EUID -ne 0 ]]; then
    echo -e "${YELLOW}Se recomienda ejecutar como root para maxima proteccion${NC}"
fi

# Ejecutar funcion principal
main "$@"

# Mostrar resumen final
echo ""
echo -e "${GREEN}RESUMEN DE PROTECCION:${NC}"
echo "- Log principal: $LOG_FILE"
echo "- Log de amenazas: $THREAT_LOG"
echo "- Directorios monitoreados: ${#MONITOR_DIRS[@]}"
echo "- Extensiones vigiladas: ${#DANGEROUS_EXTENSIONS[@]}"
echo ""
echo -e "${GREEN}Sistema protegido correctamente${NC}"